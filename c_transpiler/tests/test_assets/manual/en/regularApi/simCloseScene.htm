<div align="center">
    <table class="allEncompassingTable">
        <tbody>
            <tr>
                <td>
                    <p><a href="../../index.html" target="_top"><img src="../images/homeImg.png"></a></p>

                    <h1>Regular API function</h1>
                    <p class="subsectionBar"><a name="simCloseScene" id="simCloseScene"></a>simCloseScene /
                        sim.closeScene</p>
                    <table class="apiTable">
                        <tbody>
                            <tr class="apiTableTr">
                                <td class="apiTableLeftDescr">
                                    Description
                                </td>
                                <td class="apiTableRightDescr">Closes current scene, and switches to another open scene.
                                    If there is no other open scene, a new scene is then created. Can only be called
                                    from an <a href="../addOns.htm">add-on</a>, or from the sanbox script, when called
                                    from Lua. See also <a href="simLoadScene.htm">sim.loadScene</a> and <a
                                        href="simSaveScene.htm">sim.saveScene</a>.</td>
                            </tr>
                            <tr class="apiTableTr">
                                <td class="apiTableLeftCSyn">
                                    C/C++<br>synopsis
                                </td>
                                <td class="apiTableRightCSyn">int simCloseScene()</td>
                            </tr>
                            <tr class="apiTableTr">
                                <td class="apiTableLeftCParam">C/C++<br>parameters</td>
                                <td class="apiTableRightCParam">
                                    <div></div>
                                    <div></div>
                                </td>
                            </tr>
                            <tr class="apiTableTr">
                                <td class="apiTableLeftCRet">
                                    C/C++<br>return value
                                </td>
                                <td class="apiTableRightCRet">
                                    <div>-1 if operation was not successful, otherwise the current scene index.<br>
                                    </div>
                                </td>
                            </tr>
                            <tr class="apiTableTr">
                                <td class="apiTableLeftLSyn">
                                    Lua<br>synopsis
                                </td>
                                <td class="apiTableRightLSyn">int result=sim.closeScene()</td>
                            </tr>
                            <tr class="apiTableTr">
                                <td class="apiTableLeftLParam">Lua<br>parameters</td>
                                <td class="apiTableRightLParam">
                                    <div></div>
                                    <div></div>
                                </td>
                            </tr>
                            <tr class="apiTableTr">
                                <td class="apiTableLeftLRet">
                                    Lua<br>return values
                                </td>
                                <td class="apiTableRightLRet">
                                    <div>Similar to the C-function counterpart</div>
                                    <div></div>
                                </td>
                            </tr>

                            <tr class="apiTableTr">
                                <td class="apiTableLeftPSyn">Python<br>synopsis</td>
                                <td class="apiTableRightPSyn">int result=sim.closeScene()</td>
                            </tr>

                        </tbody>
                    </table>

                    <br>
                </td>

            </tr>
        </tbody>
    </table>
</div>
